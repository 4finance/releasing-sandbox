plugins {
    id 'pl.allegro.tech.build.axion-release' version '0.9.9'
    id "com.jfrog.bintray" version "1.0"
    id "maven-publish"
}
scmVersion {
    tag {
        prefix = ''
        createReleaseCommit = true
        releaseCommitMessage { version, position -> "release version: ${version}\n\n[ci skip]" }
    }
}
project.group = 'com.ofg'
project.version = scmVersion.version
apply plugin: 'groovy'
repositories {
    jcenter()
}
dependencies {
    compile 'org.codehaus.groovy:groovy-all:2.3.7'
    testCompile 'org.spockframework:spock-core:0.7-groovy-2.0'
    testCompile 'junit:junit:4.11'
}
bintrayUpload.dependsOn 'build'
bintray {
    user = project.hasProperty('bintrayUser') ? project.getProperty('bintrayUser') : System.properties['bintrayUser']
    key = project.hasProperty('bintrayKey') ? project.getProperty('bintrayKey') : System.properties['bintrayKey']
    publications = ['mavenJava']
    pkg {
        repo = 'sandbox'
        userOrg = '4finance'
        name = project.name
        desc = project.description
        licenses = ['Apache-2.0']
        publish = false
    }
}
//Mostly boilerplate code... - non plugin related https://github.com/etiennestuder/gradle-plugindev-plugin version would be useful
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
//#89 - workaround to not to have only runtime dependencies in generated pom.xml
//Known limitation in maven-publish - - http://forums.gradle.org/gradle/topics/maven_publish_plugin_generated_pom_making_dependency_scope_runtime#reply_14120711
            pom.withXml {
                asNode().dependencies.'*'.findAll() {
                    it.scope.text() == 'runtime' && project.configurations.compile.allDependencies.find { dep ->
                        dep.name == it.artifactId.text()
                    }
                }.each() {
                    it.scope*.value = 'compile'
                }
            }
        }
    }
}
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}
task javadocJar(type: Jar, dependsOn: groovydoc) {
    classifier = 'javadoc'
    from groovydoc.destinationDir
}
artifacts {
    archives sourcesJar
    archives javadocJar
}
