//Based on release.gradle from Mockito project by Szczepan Faber - https://github.com/mockito/mockito
assert project == rootProject

apply from: rootProject.file("gradle/publish.gradle")

def dryRun = project.hasProperty('dryRun')

task("releaseNeeded") {
    println "Checking if release is needed..."
    doLast {
        def branch = System.env.TRAVIS_BRANCH
        def pr = System.env.TRAVIS_PULL_REQUEST
        def ci = System.env.CI
        def localRelease = project.hasProperty("localRelease")
        ext.needed = dryRun || (pr == 'false' && branch == 'master') || (ci == null && pr == null && localRelease)
        logger.lifecycle("Release needed: {}, branch: {}, pull request: {}, dry run: {}, ci: {}, localRelease: {}.", needed, branch, pr, dryRun, ci, localRelease)
    }
}

bintrayUpload {
    dependsOn releaseNeeded
    onlyIf { releaseNeeded.needed }
    doFirst {
        if (dryRun) {
            logger.lifecycle "Dry-running bintrayUpload"
        }
    }
}

task("finalizeRelease") {
    dependsOn bintrayUpload, releaseNeeded
    onlyIf { releaseNeeded.needed }
    doLast {
        if (dryRun) {
            logger.lifecycle "Dry-running finalizeRelease"
        }
        println "Finalizing release..."
    }
}
